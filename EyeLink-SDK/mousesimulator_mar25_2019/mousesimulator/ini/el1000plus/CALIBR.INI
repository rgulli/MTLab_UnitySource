# EYELINK 1000 PLUS CALIBR.INI FILE
# Created: August 28, 2013

# *** WARNING: DO NOT MODIFY THIS FILE DIRECTLY!!! PLEASE CUT AND PASTE   ***
# *** SELECTED COMMANDS TO FINAL.INI AND MAKE MODIFICATIONS IN THAT FILE! ***
# NOTE: some settings may be overridden by LASTRUN.INI
# AND SET OPTIONS SCREEN

// This file configures calibration, validation,
// and drift correction.
//
// It sets thresholds for automatic triggering of
// of the target-fixation detector.


// CALIBRATION FITTING METHOD

	## calibration_type = <type>
	;; What type of equation to use as a fit
	;;  H3       = horizontal-only 3-point quadratic
	;;  HV3 or 3 = 3-point, bilinear
	;;  HV5 or 5 = 5-point, bi-quadratic
	;;  HV9 or 9 = 9-point, bi-quadratic with corner correction
	;;  HV13 = 13-point, bi-cubic calibration
	;;
	;; HV9 should NOT be used for remote mode
	;; HV13 works best with larger angular displays (> +/-20 degrees) 
	;; HV13 should NOT be used when accurate data is needed from corners of calibrated area 
calibration_type = HV9

	## x_gaze_constraint = <position>
	## y_gaze_constraint = <position>	
	;; For H3 calibration, it is useful to be able to set 
	;; the vertical position of generated targets,
	;; and to constrain the vertical position of the gaze
	;; to a vertical position.
	;; Use position, OFF for none,
	;; or AUTO for last calibration/validation/drift corr. in 1 D modes
x_gaze_constraint = AUTO
y_gaze_constraint = AUTO

// START HV13 SPECIFIC SETTINGS

	## calibration_bicubic_weights = <list of weights>
	;; HV13 weight for points in bi-cubic ("HV13", 13 pt) cal
	;; Point order: 
	;;		6    2    7
	;;        10   11
	;;		4    1    5
	;;		  12   13
	;;		8    3    9
	;;
	;; weights: ratio between weights determines effect
	;; values 1 to 10 suggested
	;; 10 2 2 2 2 1 1 1 1 4 4 4 4 weight pattern minimizes central error
	;; corner error is high
calibration_bicubic_weights 10 2 2 2 2 1 1 1 1 4 4 4 4

	## calibration_bicubic_correction = <ON or OFF>
	;; HV13 calibration type can perform a secondary fit of the data to try and improve accuracy.
	;; Should be OFF for head free setup.
	;; Unknown at this time if this actually improves calibration for head fixed setup.
	;; Default is OFF.
calibration_bicubic_correction OFF

// STOP HV13 SETTINGS


// CALIBRATION AND VALIDATION TARGETS

	## generate_default_targets = <YES or NO>
	;; When calibration_type is changed, new target configurations may be
	;; required.  This enables generation of the default targets and sequence.
generate_default_targets = YES

	## horizontal_target_y = <position>
	;; This sets the Y of automatically-generated targets for the H3 cal mode
horizontal_target_y = 200;


// SPECIFIED TARGET POSITIONS

	## calibration_targets = <list of x,y coordinate pairs>
	;; X,Y pairs of target point positions.
	;; These are in display coordinates for the 9-SAMPLE ALGORITHM:
	;; * POINTS MUST BE ORDERED ON SCREEN:
	;;
	;; 5  1  6
	;; 3  0  4
	;; 7  2  8
	
	;; ordering for points in bi-cubic ("HV13", 13 pt) cal
	;; Point order: 
	;;		6    2    7
	;;		  10   11
	;;		4    1    5
	;;		  12   13
	;;		8    3    9

calibration_targets = 320,240  320,40  320,440  40,240  600,240  40,40  600,40, 40,440  600,440
	;; flipped y
;;calibration_targets = 320,240  320,440  320,40  40,240  600,240  40,440  600,440, 40,40  600,40

	## validation_targets = <list of x,y coordinate pairs>
	;; X,Y pairs of validation target positions.
	;; These are in display screen coordinates
validation_targets = 320,240  320,40  320,440  40,240  600,240  40,40  600,40, 40,440  600,440
	;; flipped y
;;validation_targets = 320,240  320,440  320,40  40,240  600,240  40,440  600,440, 40,40  600,40

// TARGET PRESENTATION SEQUENCE

	## calibration_area_proportion = <x, y display proportion>
	## validation_area_proportion = <x, y display proportion>
	;; For auto generated calibration point positions,
	;; these set the part of the width or height of
	;; the display to be bounded by targets.
	;; Each may have a single proportion or
	;; a horizontal followed by a vertical proportion.
	;; Default values for both cal and val is 0.88, 0.83
	;; NOTE: setting for calibration also sets validation

calibration_area_proportion 0.88 0.83
validation_area_proportion  0.88 0.83

	## calibration_corner_scaling = <scaling factor> 
	## validation_corner_scaling = <scaling factor> 
	;; For auto generated validation point positions,
	;; a scaling factor for distance of
	;; corner targets from the display center.
	;; default is 1.0, but can be 0.75 to 0.9 to
	;; pull in corners (to limit gaze excursion
	;; or to limit validation to the useful part of the display).
	;; NOTE: setting for calibration also sets validation

calibration_corner_scaling 1.0
validation_corner_scaling 0.88

	## randomize_calibration_order = <YES or NO>
	;; switch randomized target sequencing
	;; for HV5 and HV9, first sequence entry is not randomized
randomize_calibration_order = YES

	## randomize_validation_order = <YES or NO>
	;; randomize target order during validation
	;; for HV5 and HV9, first sequence entry is not randomized
randomize_validation_order = YES

	## cal_repeat_first_target = <YES or NO>
	## val_repeat_first_target = <YES or NO>
	;; Sets whether the first point of the calibration and validation should be repeated.
cal_repeat_first_target = YES
val_repeat_first_target = YES

	## auto_calibration_messages = <YES or NO>
	;; Should the calibration messages be printed in the EDF file?
auto_calibration_messages = YES

	## calibration_samples = <count>
	;; calibration point presentation is controlled from a list of point orders, 
	;; drawn from an array of X,Y point positions.
	;; This allows repeated points to be averaged.
calibration_samples = 10   ; total length of calibration sequence

	## calibration_average = <switch>
	;; For the same calibration target position, multiple sampling can be made.  
	;; Set this command to YES to average the repeated points, 
	;; and NO to replace repeated points.
calibration_average = NO   

	## calibration_sequence = <list of target numbers>
	;; sequence of points to present (count = calibration_samples)
calibration_sequence = 0,1,2,3,4,5,6,7,8,0

	## validation_samples = <count>
	;; number of targets to present for validation
validation_samples = 9

	## validation_sequence = <list of target numbers>
	;; Sequence of points to present (count = calibration_samples).
validation_sequence = 0,1,2,3,4,5,6,7,8,0

	## validation_weights = <list of weights>
	;; weights to assign points for weighted error, offset
validation_weights = 4,2,2,2,2,1,1,1,1

	## validation_online_fixup  = <value>
	;; <value>: YES, NO, AUTO
	;; Controls if validation shows drift correction
  	;; If "AUTO", will only display correction in pupil-only mode
validation_online_fixup  = AUTO

	## validation_correct_drift = <value>
	;; <value>: YES, NO, AUTO
  	;; Sets whether drift is corrected after validation
  	;; If "AUTO", will only drift correct in pupil-only mode
validation_correct_drift = AUTO

	## validation_resample_worst = <number of points>
	;; number of points to resample after validation
validation_resample_worst = 2
	
	## validation_worst_error = <degrees>
	;; error required for resampling
validation_worst_error = 1.0

// TARGET FIXATION DATA COLLECTION
	## calibration_collection_interval = <time in msec>
	;; time over which to collect data
	;; to compute fixation for calibrate/validate/dc
calibration_collection_interval = 100

// MANUAL TRIGGERED FIXATION STABILITY CHECKS
	;; these parameters set the manual collection stability criterion
	
	## manual_collection_minimum_fixation = <time in msec>
	;; target fixation duration in msec
manual_collection_minimum_fixation = 300

	## manual_collection_fixation_lookback = <time in msec>
	;; time fixation may have ended previous to manual collection
manual_collection_fixation_lookback = 200

// AUTO-TRIGGERING FIXATION SYSTEM
	;; these parameters set up the auto-calibration system

	## enable_automatic_calibration = <switch>
	;; enables automatic sequencing of calibration targets.
	;; NO forces manual or remote collection
enable_automatic_calibration = YES

	## autocal_minimum_saccade = <degrees>
	;; minimum saccade amplitude in degrees of visual angle before 
	;; automatic accepting a fixation during calibration 
autocal_minimum_saccade = 2.5   ;; CONSERVATIVE for small-deviation trigger

	## autocal_saccade_fraction = <fraction> [<min angle>]
  	;; Optionally scales auto-cal minimum saccade angle to be
  	;; a fraction of the distance between the old and new targets.
  	;; <fraction> = 0 to disable.
  	;; Otherwise, scales proportion of angle between the targets
	;; the saccade must cover (0.5 recommended)
  	;; <min angle> = The smallest angle permitted for the threshold (optional).
	;; This should be high enough to prevent triggering from blinks and noise.
autocal_saccade_fraction = 0  3

	## autocal_minimum_fixation = <time in msec>
	;; target fixation duration in msec also controls subjective speed
autocal_minimum_fixation = 500

	## automatic_calibration_pacing = <time delay in msec>
	;; minimum time between target sequencing in auto sequencing
automatic_calibration_pacing = 1000

	## validation_maximum_deviation = <degrees>
	;; maximum fixation distance from target
	;; that is automatically accepted in validation
validation_maximum_deviation = 7.0

	## drift_correction_rpt_error = <degrees>
	;; Maximum degrees of error for the drift correction should be repeated.
drift_correction_rpt_error = 2.0

	## drift_correction_rpt_beep = <YES or NO>
	;; Tracker will flash and repeat drift correction if the error is
	;; greater than a rpt_error.  This also makes the tracker beep.  
drift_correction_rpt_beep = YES


// CALIBRATION CHECKING CRITERIONS

	;; The expected range of eye camera gains, in units per degree of visual angle
	;; sign such that positive x,y is for a fixation at bottom right of display
minimum_eyecam_x_upd = 0.5
maximum_eyecam_x_upd = 10.0
minimum_eyecam_y_upd = 0.25
maximum_eyecam_y_upd = 5.0

	;; Limits on ratio Gy/Gx, the Y and X
	;; gains needed to convert eye camera pupil coords to real coords.  
	:: This ratio is usually greater than 1.0
maximum_xy_gain_ratio = 5.0;
minimum_xy_gain_ratio = 1.0;

	;; Maximum rotational/skew gain coefficient in calibration
maximum_linear_crossterm = 0.8;

	;; Linearity tests inside of good-pupil test region
	;; maximum left/right and top/bottom gain ratios (X and Y)
maximum_nonlinearity = 2.0, 4.0;
	;; Ratio of corner fixup terms to linear terms
maximum_corner_fixup = 0.6;


// DEFAULT CALIBRATION USED AT STARTUP

	## default_eye_mapping = <coefficients>
	;; If possible, a .CAL file saved earlier is used.
	;; If not, these values are used to create a
	;; default map eye to head-related unit (fl=15000)
	;; X = a+bx, Y = c+dy
	;; give a, b, c ,d
default_eye_mapping = -15360, 80, -12800, 160


// RECORD TIME DRIFT CORRECT SETTINGS
	
	## online_dcorr_collection_time = <min time> <max time>
	;; First number sets minimum time to aggregate
	;; second number sets maximum time to aggregate
	;; If minimum time is not available from current fixation,
	;; data aggregated from the end of the previous fixation is checked
online_dcorr_collection_time = 100, 300

	## online_dcorr_max_lookback = <max look back>
	;; maximum time from end of previous fixation to the trigger to allow
	;; use of the previous fixation data
	;; this should be greater than the minimum aggregation time
	;; plus the longest expected, but not so long that data is irrelevant
online_dcorr_max_lookback = 250
	
	## online_dcorr_refposn = <x coord> <y coord>
	;; position for drift correction (gaze)
	;; if doing manual recording, ensure pixel_coords is set in physical.ini
online_dcorr_refposn = 512, 384

	## online_dcorr_maxangle = <angle in degrees>
	;; This is the maximum visual angle between the target and the computed
	;; (previous to correction) gaze position.  
	;; A small angle (2 to 5 degrees) is preferable for regular on-line 
	;; drift correction.  
	;; A much larger angle should be used when performing parallax and depth
	;; correction in scene camera mode.  
	;; When head tracking is turned off, carefully set the simulation 
	;; distance in PHYSICAL.INI for this (and all) angles to be accurate.
online_dcorr_maxangle = 5.0

	## online_dcorr_trigger <x ref coord> <y ref coord>
	;; the "online_dcorr_trigger" command can be used over the link
	;; and will return error codes if it fails:
	;;  1 if math failed (recalibration required)
	;;  2 if not usable data is possible (too early in fixation and last
	;;    fixation too old)
	;;  3 if drift correction angle was too large.
;; online_dcorr_trigger
	
	;; this line sets which key can be used to trigger the drift correction\
	;; see BUTTONS.INI
#key_function F9 "online_dcorr_trigger"


// DRIFT CORRECTION WITH MULTIPLE TARGETS
	## drift_correction_samples = <count>
	;; These are similar to the "validation_xxx" commands.   The idea 
	;; was that you could collect several fixations at different 
	;; locations for a drift correction, the drift correct to a weighted
	;; average of the error.  The drift correction point presentation is 
	;; controlled from a list of point orders, drawn from an array of 
	;; X, Y positions.  This commands set the number of targets to 
	;; present for drift correction. By default, only 1 sample is used.
drift_correction_samples = 1

	## drift_correction_weights = <list of weight>
	;; Weights to assign points for weighted error for drift correction.
drift_correction_weights = 1

	## drift_correction_targets = <list of x,y coordinates>
	;; This sets an array of sequenced X, Y pairs of drift correction 
	;; target positions in display coordinates. This command is used 
	;; internally by the API function eyelink_driftcorr_start().
drift_correction_targets = 512, 384

	## drift_correction_fraction = <fraction>
	;; Fraction of drift correction to be applied.  The idea is that 
	;; applying a small correction many times will converge to zero error
	;; with less effect of inaccurate fixations. The default is full fixup (1.0).
drift_correction_fraction = 1.0

	## drift_correct_mouse = <ON or OFF>
	;; Whether drift correction is performed in mouse simulation. Because
	;; mouse reverse-maps gaze to eye position, the drift correction 
	;; fixup will increase with each drift correction, eventually causing
	;; problems.  Turning off the drift correction fixup is one solution.
	;; If on, we currently reduce the correction by half--this shows an 
	;; effect at least.
drift_correct_mouse = ON


	## driftcorrect_cr_disable = <switch>
  	;; Disables drift correction unless in pupil-only mode.
  	;; Drift correction functions normally but has no effect.
  	;; Default: OFF
  	;; <switch>:
	;;	OFF or 0   = normal DC even in P-CR mode
	;;	ON or 1    = DC has no effect, any inaccurate fixation ignored
	;;	AUTO or -1 = Flash and bleep if subject is not fixating target, but no correction for fixation error
driftcorrect_cr_disable = AUTO

// REMOTE CALIBRATION
	## remote_cal_enable = <remote calibration settings>
	;; Turns on remote calibration and disables automatic sequencing of 
	;; targets.  0 to disable remote calibration.  1 or YES waits for all
	;; targets and at end of calibration.  -1 waits only at end of cal (for data).
remote_cal_enable = OFF

	## remote_cal_target <targnum>
	;; Commands display of target in remote calibration.  The target 
	;; number is 1 to max for calibration mode.  0 will hide current 
	;; target and return to waiting.  Targets can be presented several 
	;; times.
;; key_function 1 'remote_cal_target 1'
;; key_function 2 'remote_cal_target 2'
;; key_function 3 'remote_cal_target 3'
;; key_function 4 'remote_cal_target 4'
;; key_function 5 'remote_cal_target 5'
;; key_function 6 'remote_cal_target 6'
;; key_function 7 'remote_cal_target 7'
;; key_function 8 'remote_cal_target 8'
;; key_function 9 'remote_cal_target 9'

	## remote_cal_complete  
	;; Commands to complete remote calibration.   Fails if data has not
	;; been collected for all targets yet. 
;; remote_cal_complete 

	## calibration_status
	;;  READ-ONLY calibration data
	;; used to get current cal status and target info
	;; The format of the string return value as:
	;; 	"targx targy targvis targnum totnum status"
  	;; targx, targy: target location (floating point)
  	;; targvis: 0 if hidden, 1 if drawn
  	;; targnum, totnum: same as the "%d of %d" on cal screen
  	;; status: status, same as on cal screen, one of:
  	;;    STABLE, WAITING, PACING, MARKERS, MOVING, NO PUPIL, NO CR
;; calibration_status

	## calibration_fixation_data
	;; Used to get info after fixation accepted
	;; will be blank before first accepted.
	;; Use string compare to test for changes.
	;; One line with lots of data (line is wrapped for documentation).
	;; The format of the string return value as:
	;; 	"fixdata targid seqnum eye targx, targy, tstart, tend,
	;;       pxl, pyl pxr, pyr, dxl, dyl, dxr, dyr, hxl, hyl, hxr, hyr"
  	;; targid: target number in position list
  	;; seqnum: sequence order number
  	;; eye: 0 if left, 1 if right, 2 if binocular
  	;; targx, targy: gaze position of target (floating point)
  	;; tstart, tend: tracker time of start and end of data integration period
  	;; p (pupil: x,y, left,right),
  	;; d (p-cr: x,y, left,right),
  	;; h (target href: x,y, left,right),
 ;; calibration_fixation_data

	## remote_cal_data <targ> <pxl> <pyl> <pxr> <pyr> <dxl> <dyl> <dxr> 
	;;	<dyr> <mx1> <my1> <mx2> <my2> <mx3> <my3> <mx4> <my4>
 	;; This command requires 16 args from averages in the samples to be
 	;; used as cal data.
 	;; these are: 	p (pupil: x,y, left,right),
 	;;		d (p-cr: x,y, left,right),
 	;;              m (markers, x,y, 1 through 4)
 	;; any fields that were MISSING in all samples can be set to 0
;; remote_cal_data

	## remote_cal_href_data <id> <pxl> <pyl> <pxr> <pyr> <dxl> <dyl> 
	##			<dxr> <dyr> <hxl> <hyl> <hxr> <hyr>
	;; For use with external head-tracker.
	;; Supply eye data, target HREF equivalent.
	;; This command requires 12 args from averages in
	;; the samples to be used as cal data
	;; these are: 
	;;	id: target number in XY position list
	;; 	p (pupil: x,y, left,right),
	;; 	d (p-cr: x,y, left,right),
	;; 	h (target href: x,y, left,right),
	;; any fields that were MISSING in all samples can be set to 0
;; remote_cal_href_data

	## reset_cal_data_points
	;; Clears all calibration data points before sending remotely 
	;; generated calibration data. Otherwise, both tracker and remote data
	;; will be plotted (and possibly averaged). 
;; reset_cal_data_points

// OTHER CALIBRATION SETTINGS;
	## disable_cal_auto_sequence = <switch>
	;; Disables auto-sequencing, prevents being turned on manually.
disable_cal_auto_sequence = NO

	## disable_cal_trigger = <switch>
	;; Disable any cal target fixation triggering; this forces use of 
	;; remote data. 
disable_cal_trigger = NO

	## disable_cal_backspace = <switch>
	;; Pressing the "backspace" key can redo the previous calibration 
	;; points.  Use this command to disable backing up through targets 
	;; with "backspace" key.
disable_cal_backspace = NO

	## disable_cal_auto_manual_switch = <switch>
	;; Prevents manual trigger (for targets other than first) from turning
	;; off automatic trigger and sequencing.
disable_cal_auto_manual_switch = NO

	## disable_cal_auto_manual_switch = <switch>
	;; Prevents manual trigger (for targets other than first) from turning
	;; off automatic trigger and sequencing.
show_cal_target_while_waiting = NO

	## normal_click_dcorr = <ON or OFF>  
	;; Whether the drift correction by mouse click button is available in 
	;; normal (non-video) mode (default is OFF).
normal_click_dcorr = OFF

	## online_dcorr_button = <ON or OFF>
	;; Whether the immediate drift correction to predefined target button
	;; is available in normal mode (default is OFF). Note the normal blue 
	;; will only appear in the following settings:
	;;	online_dcorr_button = ON;
	;; 	video_click_dcorr = OFF;
	;; 	normal_click_dcorr = OFF
	;;	scenecam_click_dcorr = OFF
online_dcorr_button = OFF;

	## always_default_calibration
  	;; Resets all calibration values to defaults before collecting new calibration.
  	;; Last good calibration is saved before this, so should have no effect.
  	;; DEFAULT: ON
always_default_calibration = ON

